# =================================================================
# A3S Admin Dashboard - Environment Configuration
# =================================================================
# Copy this file to '.env.local' and fill in your actual values
# Never commit the actual '.env.local' file to version control

# =================================================================
# Authentication Configuration (Clerk)
# =================================================================
# IMPORTANT: This template supports Clerk's keyless mode!
# You can start using the app immediately without any configuration.
# When you're ready to claim your application, simply click the Clerk
# popup at the bottom of the screen to get your API keys.

# Required: Clerk API Keys (Leave empty for keyless mode)
NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=
CLERK_SECRET_KEY=

# Authentication Redirect URLs
# These control where users are directed after authentication actions
NEXT_PUBLIC_CLERK_SIGN_IN_URL="/auth/sign-in"
NEXT_PUBLIC_CLERK_SIGN_UP_URL="/auth/sign-up"
NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL="/dashboard/overview"
NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL="/dashboard/overview"

# =================================================================
# Database Configuration (Supabase + Drizzle)
# =================================================================
# To set up your database:
# 1. Create a Supabase project at https://supabase.com
# 2. Go to Settings > Database and copy the connection string
# 3. Go to Settings > API and copy the URL and keys

# Database Connection (Required)
# Format: postgresql://postgres:[password]@[host]:5432/[database]
DATABASE_URL=postgresql://postgres:[password]@[host]:5432/[database]

# Supabase Configuration (Required)
NEXT_PUBLIC_SUPABASE_URL=https://[project-id].supabase.co
NEXT_PUBLIC_SUPABASE_ANON_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
SUPABASE_SERVICE_ROLE_KEY=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...

# =================================================================
# File Storage & Encryption
# =================================================================
# File Encryption Key (Required for client credentials and sensitive files)
# Generate a secure 32-character key: openssl rand -hex 32
FILE_ENCRYPTION_KEY=your-32-character-encryption-key-here

# File Upload Directory (Optional - defaults to './uploads')
UPLOAD_DIR=./uploads

# =================================================================
# Error Tracking Configuration (Sentry) - Optional
# =================================================================
# To set up Sentry error tracking:
# 1. Create an account at https://sentry.io
# 2. Create a new project for Next.js
# 3. Follow the setup instructions below

# Step 1: Sentry DSN (Required for error tracking)
# Found at: Settings > Projects > [Your Project] > Client Keys (DSN)
NEXT_PUBLIC_SENTRY_DSN=https://****@****.ingest.sentry.io/****

# Step 2: Organization & Project Details
# Found at: Settings > Organization > General Settings
NEXT_PUBLIC_SENTRY_ORG=acme-corp
NEXT_PUBLIC_SENTRY_PROJECT=nextjs-dashboard

# Step 3: Sentry Auth Token (Optional - for source maps)
# Sentry can automatically provide readable stack traces for errors using source maps
# More info: https://docs.sentry.io/platforms/javascript/guides/nextjs/manual-setup/#step-4-add-readable-stack-traces-with-source-maps-optional
SENTRY_AUTH_TOKEN=sntrys_************************************

# Step 4: Environment Control (Optional)
# Set to 'true' to disable Sentry in development
NEXT_PUBLIC_SENTRY_DISABLED=false

# =================================================================
# Application Configuration
# =================================================================
# Node Environment (automatically set by Next.js)
NODE_ENV=development

# Next.js Runtime (automatically set by Next.js)
NEXT_RUNTIME=nodejs

# =================================================================
# Setup Instructions
# =================================================================
# 1. Copy this file to '.env.local'
# 2. Fill in the required values above
# 3. For Supabase setup:
#    - Create a project at https://supabase.com
#    - Copy the database URL from Settings > Database
#    - Copy the API URL and keys from Settings > API
# 4. For file encryption:
#    - Generate a secure key: openssl rand -hex 32
#    - Replace the placeholder with your generated key
# 5. Run database migrations:
#    - pnpm db:generate (generates migration files)
#    - pnpm db:push (applies schema to database)
# 6. Start the development server:
#    - pnpm dev

# =================================================================
# Security Notes
# =================================================================
# 1. Never commit the actual '.env.local' file to version control
# 2. Keep your secret keys private and never share them
# 3. Use different keys for development, staging, and production
# 4. Regularly rotate your encryption keys
# 5. Monitor your Supabase usage and set up billing alerts
# 6. Enable Row Level Security (RLS) in Supabase for production

# =================================================================
# Required vs Optional Variables
# =================================================================
# REQUIRED (app won't work without these):
# - DATABASE_URL
# - NEXT_PUBLIC_SUPABASE_URL
# - NEXT_PUBLIC_SUPABASE_ANON_KEY
# - SUPABASE_SERVICE_ROLE_KEY
# - FILE_ENCRYPTION_KEY

# OPTIONAL (app will work with defaults):
# - UPLOAD_DIR (defaults to './uploads')
# - All Sentry variables (for error tracking)
# - Clerk variables (supports keyless mode)

# =================================================================
# Troubleshooting
# =================================================================
# If you encounter issues:
# 1. Check that all required variables are set
# 2. Verify your Supabase connection string format
# 3. Ensure your encryption key is exactly 32 characters
# 4. Check the browser console for any missing environment variables
# 5. Run 'pnpm db:push' to ensure your database schema is up to date